// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  username       String         @unique
  email          String         @unique
  hashedPassword String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  groups         Group[]        @relation("GroupMembers")
  ownedGroups    Group[]
  sentMessages   Message[]      @relation("SentMessages")
  conversations  Conversation[]
}

model Group {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  ownerId   String
  owner     User      @relation(fields: [ownerId], references: [id])
  members   User[]    @relation("GroupMembers")
  messages  Message[]
}

model Conversation {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  messages  Message[]
}

model Message {
  id             String        @id @default(uuid())
  content        String
  createdAt      DateTime      @default(now())
  senderId       String
  sender         User          @relation("SentMessages", fields: [senderId], references: [id])
  groupId        String?
  group          Group?        @relation(fields: [groupId], references: [id])
  conversationId String?
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
}
